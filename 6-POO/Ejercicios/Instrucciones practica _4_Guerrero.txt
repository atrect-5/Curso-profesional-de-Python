
4.- Cree una clase Guerrero que posea los atributos “vida” con valor inicial en 100 y “estado_arma” con valor inicial en 100.

5.- En la clase Guerrero definida anteriormente, escriba un método atacar que reciba otra instancia y disminuya de la vida de la misma en 20.
**Considere el concepto “duck typing”.

6.- Modifique el método anterior para que, además de disminuir el atributo “vida” de la instancia recibida, disminuya en 2 el atributo “estado_arma” del objeto que ejecuta el método.

7.- Amplíe el funcionamiento del ejemplo anterior para que el ataque sea realizado únicamente si el atributo “estado_arma” de la clase que ejecuta el método es mayor o igual a 2.

8.- A la clase Guerrero, agregue una propiedad “is_alive” (@property) que indique si el objeto está vivo (posee una vida mayor a 0).

9.- Agregue un nuevo atributo a la clase Guerrero que indique el “estado”; el mismo puede ser “ataque” o “defensa”, pero siempre deberá inicializarse en “ataque”.

10.- Cree una nuevo atributo “estado_escudo” a la clase Guerrero, que se inicialice en 100 por defecto.

11.- Convierta el atributo “estado” de la clase Guerrero a una propiedad para que no pueda setearse a “defensa” cuando “estado_escudo” sea 0. En tal caso, deberá elevar una excepción ValueError, al igual que si el estado que quiere asignarse no es “defensa” o “ataque”.

12.- Modifique el método “atacar” de la clase Guerrero para que, actúe de la siguiente manera:
a: Si el “estado” de la instancia recibida es “defensa”, disminuya el estado del escudo en 5.
b: Si el “estado” de la instancia recibida es “ataque”, disminuya el estado de la vida en 20.
c: En cualquiera de los casos, dismuya en 2 el estado del arma que ejecuta el método.
d: Compruebe que el estado de la instancia que ejecuta el método sea “ataque”.
e: El ataque sea realizado únicamente si la instancia recibida esta viva.